import { Component, Element, h, Host, Prop, State, Watch } from '@stencil/core';
import { loadPrism } from '../../../3d-party/prism';
/**
 * @name Code Highlighter
 * @description A browser based code highlighter.
 * @img /assets/img/code-highlighter.png
 */
export class CodeHighlighter {
  constructor() {
    this.language = 'javascript';
    this.lineNumbers = false;
    this.value = '';
    this.compiledCode = '';
    this.parsedValue = '';
  }
  languageWatcher() {
    this.renderPrism();
  }
  themeWatcher() {
    this.renderPrism();
  }
  async componentWillLoad() {
    if (!window['Prism']) {
      await loadPrism();
    }
  }
  componentDidLoad() {
    setTimeout(() => this.renderPrism(), 1000);
  }
  decode(str) {
    return str.replace(/&lt;/g, '<').replace(/&gt;/g, '>');
  }
  renderPrism() {
    // @ts-ignore
    const Prism = window['Prism'];
    let value = this.value;
    if (!value) {
      value = this.elm.innerHTML;
    }
    value = this.decode(value);
    this.parsedValue = value.trim();
    const formatted = Prism.highlight(this.parsedValue, Prism.languages[this.language], this.language);
    let lineNumbersWrapper = '';
    if (this.lineNumbers) {
      const linesNum = formatted.split('\n').length;
      const lines = new Array(linesNum + 1).join('<span></span>');
      lineNumbersWrapper = `<span aria-hidden='true' class='line-numbers-rows'>${lines}</span>`;
    }
    this.compiledCode = formatted + lineNumbersWrapper;
  }
  handleCopyClick() {
    window.navigator.clipboard.writeText(this.parsedValue);
    alert('copied');
  }
  render() {
    return (h(Host, null,
      this.compiledCode && h("div", { class: 'code-highlighter' },
        h("div", { class: 'scroll-wrapper' },
          h("div", { class: { 'line-numbers-wrapper': true, 'line-numbers': this.lineNumbers } },
            h("pre", { dir: 'ltr', class: 'highlighter line-numbers', innerHTML: this.compiledCode }))),
        h("goat-button", { class: 'copy-btn color-secondary', size: 'sm', variant: 'ghost', icon: 'files', "aria-label": 'Copy code', title: 'Copy code', "onGoat:click": () => {
            this.handleCopyClick();
          } })),
      !this.compiledCode && h("div", { class: 'code-loader' },
        h("goat-spinner", { class: 'rainbow' }),
        "Loading code...")));
  }
  static get is() { return "goat-code-highlighter"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["code-highlighter.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["code-highlighter.css"]
  }; }
  static get properties() { return {
    "language": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'markup' | 'css' | 'clike' | 'javascript' | 'abap' | 'actionscript' | 'ada' | 'apacheconf' | 'apl' | 'applescript' | 'arduino' | 'arff' | 'asciidoc' | 'asm6502' | 'aspnet' | 'autohotkey' | 'autoit' | 'bash' | 'basic' | 'batch' | 'bison' | 'brainfuck' | 'bro' | 'c' | 'csharp' | 'cpp' | 'coffeescript' | 'clojure' | 'crystal' | 'csp' | 'css-extras' | 'd' | 'dart' | 'diff' | 'django' | 'docker' | 'eiffel' | 'elixir' | 'elm' | 'erb' | 'erlang' | 'fsharp' | 'flow' | 'fortran' | 'gedcom' | 'gherkin' | 'git' | 'glsl' | 'gml' | 'go' | 'graphql' | 'groovy' | 'haml' | 'handlebars' | 'haskell' | 'haxe' | 'http' | 'hpkp' | 'hsts' | 'ichigojam' | 'icon' | 'inform7' | 'ini' | 'io' | 'j' | 'java' | 'jolie' | 'json' | 'julia' | 'keyman' | 'kotlin' | 'latex' | 'less' | 'liquid' | 'lisp' | 'livescript' | 'lolcode' | 'lua' | 'makefile' | 'markdown' | 'markup-templating' | 'matlab' | 'mel' | 'mizar' | 'monkey' | 'n4js' | 'nasm' | 'nginx' | 'nim' | 'nix' | 'nsis' | 'objectivec' | 'ocaml' | 'opencl' | 'oz' | 'parigp' | 'parser' | 'pascal' | 'perl' | 'php' | 'php-extras' | 'plsql' | 'powershell' | 'processing' | 'prolog' | 'properties' | 'protobuf' | 'pug' | 'puppet' | 'pure' | 'python' | 'q' | 'qore' | 'r' | 'jsx' | 'tsx' | 'renpy' | 'reason' | 'rest' | 'rip' | 'roboconf' | 'ruby' | 'rust' | 'sas' | 'sass' | 'scss' | 'scala' | 'scheme' | 'smalltalk' | 'smarty' | 'sql' | 'soy' | 'stylus' | 'swift' | 'tap' | 'tcl' | 'textile' | 'tt2' | 'twig' | 'typescript' | 'vbnet' | 'velocity' | 'verilog' | 'vhdl' | 'vim' | 'visual-basic' | 'wasm' | 'wiki' | 'xeora' | 'xojo' | 'xquery' | 'yaml'",
        "resolved": "\"markup\" | \"css\" | \"clike\" | \"javascript\" | \"abap\" | \"actionscript\" | \"ada\" | \"apacheconf\" | \"apl\" | \"applescript\" | \"arduino\" | \"arff\" | \"asciidoc\" | \"asm6502\" | \"aspnet\" | \"autohotkey\" | \"autoit\" | \"bash\" | \"basic\" | \"batch\" | \"bison\" | \"brainfuck\" | \"bro\" | \"c\" | \"csharp\" | \"cpp\" | \"coffeescript\" | \"clojure\" | \"crystal\" | \"csp\" | \"css-extras\" | \"d\" | \"dart\" | \"diff\" | \"django\" | \"docker\" | \"eiffel\" | \"elixir\" | \"elm\" | \"erb\" | \"erlang\" | \"fsharp\" | \"flow\" | \"fortran\" | \"gedcom\" | \"gherkin\" | \"git\" | \"glsl\" | \"gml\" | \"go\" | \"graphql\" | \"groovy\" | \"haml\" | \"handlebars\" | \"haskell\" | \"haxe\" | \"http\" | \"hpkp\" | \"hsts\" | \"ichigojam\" | \"icon\" | \"inform7\" | \"ini\" | \"io\" | \"j\" | \"java\" | \"jolie\" | \"json\" | \"julia\" | \"keyman\" | \"kotlin\" | \"latex\" | \"less\" | \"liquid\" | \"lisp\" | \"livescript\" | \"lolcode\" | \"lua\" | \"makefile\" | \"markdown\" | \"markup-templating\" | \"matlab\" | \"mel\" | \"mizar\" | \"monkey\" | \"n4js\" | \"nasm\" | \"nginx\" | \"nim\" | \"nix\" | \"nsis\" | \"objectivec\" | \"ocaml\" | \"opencl\" | \"oz\" | \"parigp\" | \"parser\" | \"pascal\" | \"perl\" | \"php\" | \"php-extras\" | \"plsql\" | \"powershell\" | \"processing\" | \"prolog\" | \"properties\" | \"protobuf\" | \"pug\" | \"puppet\" | \"pure\" | \"python\" | \"q\" | \"qore\" | \"r\" | \"jsx\" | \"tsx\" | \"renpy\" | \"reason\" | \"rest\" | \"rip\" | \"roboconf\" | \"ruby\" | \"rust\" | \"sas\" | \"sass\" | \"scss\" | \"scala\" | \"scheme\" | \"smalltalk\" | \"smarty\" | \"sql\" | \"soy\" | \"stylus\" | \"swift\" | \"tap\" | \"tcl\" | \"textile\" | \"tt2\" | \"twig\" | \"typescript\" | \"vbnet\" | \"velocity\" | \"verilog\" | \"vhdl\" | \"vim\" | \"visual-basic\" | \"wasm\" | \"wiki\" | \"xeora\" | \"xojo\" | \"xquery\" | \"yaml\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "language",
      "reflect": false,
      "defaultValue": "'javascript'"
    },
    "lineNumbers": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "line-numbers",
      "reflect": false,
      "defaultValue": "false"
    },
    "value": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "value",
      "reflect": false,
      "defaultValue": "''"
    }
  }; }
  static get states() { return {
    "compiledCode": {}
  }; }
  static get elementRef() { return "elm"; }
  static get watchers() { return [{
      "propName": "language",
      "methodName": "languageWatcher"
    }, {
      "propName": "lineNumbers",
      "methodName": "themeWatcher"
    }]; }
}
//# sourceMappingURL=code-highlighter.js.map