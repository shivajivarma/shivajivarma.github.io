import { Component, Element, h, Host, Prop, State } from '@stencil/core';
import { isDarkMode, observeThemeChange } from '../../../utils/utils';
/**
 * @name Toast
 * @description Toasts are lightweight notifications.
 * @example <goat-toast state="success" message="Successful saved the record"></goat-toast>
 */
export class Toast {
  constructor() {
    this.message = '';
    this.state = 'info';
    this.isDarkMode = isDarkMode();
  }
  componentWillLoad() {
    observeThemeChange(() => {
      this.isDarkMode = isDarkMode();
    });
  }
  renderStateIcon() {
    if (this.state === 'success') {
      return h("goat-icon", { class: 'inherit', name: 'check-circle-fill', size: 'sm' });
    }
    else if (this.state === 'error') {
      return h("goat-icon", { class: 'inherit', name: 'x-circle-fill', size: 'sm' });
    }
    else if (this.state === 'info') {
      return h("goat-icon", { class: 'inherit', name: 'info-circle-fill', size: 'sm' });
    }
    else if (this.state === 'warning') {
      return h("goat-icon", { class: 'inherit', name: 'exclamation-circle-fill', size: 'sm' });
    }
  }
  render() {
    return (h(Host, null,
      h("div", { class: { 'toast': true, 'dark-mode': this.isDarkMode }, role: 'alert' },
        h("div", { class: 'state-icon' }, this.renderStateIcon()),
        h("div", { class: 'content' },
          h("div", { class: 'message' }, this.message)))));
  }
  static get is() { return "goat-toast"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["toast.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["toast.css"]
  }; }
  static get properties() { return {
    "message": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "message",
      "reflect": false,
      "defaultValue": "''"
    },
    "state": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'success' | 'error' | 'info' | 'warning'",
        "resolved": "\"error\" | \"info\" | \"success\" | \"warning\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "state",
      "reflect": true,
      "defaultValue": "'info'"
    }
  }; }
  static get states() { return {
    "isDarkMode": {}
  }; }
  static get elementRef() { return "elm"; }
}
//# sourceMappingURL=toast.js.map