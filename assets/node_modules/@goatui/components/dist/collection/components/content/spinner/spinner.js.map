{"version":3,"file":"spinner.js","sourceRoot":"","sources":["../../../../src/components/content/spinner/spinner.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAC;AAEnD;;;;GAIG;AAMH,MAAM,OAAO,OAAO;EALpB;IAOE;;;OAGG;IACK,SAAI,GAAuC,IAAI,CAAC;GAuCzD;EArCS,OAAO;IACb,IAAI,IAAI,CAAC;IACT,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK;MACjC,IAAI,GAAG,SAAS,CAAC;SACd,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,MAAM;MACrD,IAAI,GAAG,QAAQ,CAAC;SACb,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,KAAK;MACtC,IAAI,GAAG,SAAS,CAAC;SACd,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,OAAO;MACxC,IAAI,GAAG,MAAM,CAAC;;MAEd,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnB,OAAO,IAAI,CAAC;EACd,CAAC;EAED,MAAM;IACJ,OAAO,CACL,EAAC,IAAI;MACH,WAAK,KAAK,EAAC,SAAS;QAClB,WAAK,OAAO,EAAC,KAAK,EAAC,KAAK,EAAC,iBAAiB,EAAC,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,KAAK,EACrD,KAAK,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,EAAC,WAAW,EAAC,IAAI,EAAC,cAAc;UACzF,YACE,CAAC,EAAC,6KAA6K;YAC/K,wBAAkB,aAAa,EAAC,KAAK,EACnB,aAAa,EAAC,WAAW,EACzB,IAAI,EAAC,QAAQ,EACb,IAAI,EAAC,SAAS,EACd,EAAE,EAAC,WAAW,EACd,GAAG,EAAC,MAAM,EACV,WAAW,EAAC,YAAY,GAAG,CACxC,CACH,CACF,CACD,CACR,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import { Component, h, Host, Prop } from '@stencil/core';\nimport { ElementSize } from '../../../utils/utils';\n\n/**\n * @name Spinner\n * @description Spinners provide a visual cue that an action is processing awaiting a course of change or a result.\n * @example <goat-spinner class=\"rainbow\"></goat-spinner>\n */\n@Component({\n  tag: 'goat-spinner',\n  styleUrl: 'spinner.scss',\n  shadow: true,\n})\nexport class Spinner {\n\n  /**\n   * The Icon size.\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`, `\"xl\"` and size in pixel. Defaults to `\"md\"`.\n   */\n  @Prop() size: 'sm' | 'md' | 'lg' | 'xl' | string = 'md';\n\n  private getSize() {\n    let size;\n    if (this.size === ElementSize.SMALL)\n      size = '1.25rem';\n    else if (!this.size || this.size === ElementSize.MEDIUM)\n      size = '1.5rem';\n    else if (this.size === ElementSize.LARGE)\n      size = '1.75rem';\n    else if (this.size === ElementSize.X_LARGE)\n      size = '2rem';\n    else\n      size = this.size;\n    return size;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class='spinner'>\n          <svg version='1.1' class='loader icon-svg' x='0px' y='0px'\n               width={this.getSize()} height={this.getSize()} viewBox='0 0 50 50' fill='currentColor'>\n            <path\n              d='M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z'>\n              <animateTransform attributeType='xml'\n                                attributeName='transform'\n                                type='rotate'\n                                from='0 25 25'\n                                to='360 25 25'\n                                dur='0.6s'\n                                repeatCount='indefinite' />\n            </path>\n          </svg>\n        </div>\n      </Host>\n    );\n  }\n\n}\n"]}