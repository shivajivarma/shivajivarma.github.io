import { Component, h, Host, Prop } from '@stencil/core';
/**
 * @name Text
 * @description Typography are used for rendering headlines, paragraphs and captions.
 * @example <goat-text type="heading" level="1">Heading</goat-typography>
 */
export class Text {
  constructor() {
    this.type = 'text';
    this.shade = 'primary';
    /**
     * The heading level.
     */
    this.level = 1;
  }
  render() {
    return (h(Host, null, (() => {
      if (this.type === 'heading')
        return this.renderHeading();
      else if (this.type === 'paragraph')
        return this.renderParagraph();
      else if (this.type === 'text')
        return this.renderText();
    })()));
  }
  componentWillLoad() {
    if (this.type === 'heading') {
      if (!this.size) {
        if (this.level === 1) {
          this.size = 'xl';
        }
        else if (this.level === 2) {
          this.size = 'lg';
        }
        else if (this.level === 3) {
          this.size = 'md';
        }
        else if (this.level === 4) {
          this.size = 'sm';
        }
        else if (this.level === 5) {
          this.size = 'xs';
        }
      }
    }
    else {
      if (!this.size) {
        this.size = 'md';
      }
    }
  }
  renderHeading() {
    const HeadingTag = `h${this.level}`;
    return (h(HeadingTag, { class: 'heading' },
      h("slot", null)));
  }
  renderParagraph() {
    return (h("p", { class: { 'paragraph': true, [`size-${this.size}`]: true } },
      h("slot", null)));
  }
  renderText() {
    return (h("span", { class: { 'text': true, [`size-${this.size}`]: true } },
      h("slot", null)));
  }
  static get is() { return "goat-text"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["text.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["text.css"]
  }; }
  static get properties() { return {
    "type": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'heading' | 'paragraph' | 'text'",
        "resolved": "\"heading\" | \"paragraph\" | \"text\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "type",
      "reflect": true,
      "defaultValue": "'text'"
    },
    "shade": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'primary' | 'secondary' | 'tertiary'",
        "resolved": "\"primary\" | \"secondary\" | \"tertiary\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "shade",
      "reflect": true,
      "defaultValue": "'primary'"
    },
    "level": {
      "type": "number",
      "mutable": false,
      "complexType": {
        "original": "1 | 2 | 3 | 4 | 5",
        "resolved": "1 | 2 | 3 | 4 | 5",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "The heading level."
      },
      "attribute": "level",
      "reflect": false,
      "defaultValue": "1"
    },
    "size": {
      "type": "string",
      "mutable": true,
      "complexType": {
        "original": "'xs' | 'sm' | 'md' | 'lg' | 'xl'",
        "resolved": "\"lg\" | \"md\" | \"sm\" | \"xl\" | \"xs\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Text size."
      },
      "attribute": "size",
      "reflect": true
    }
  }; }
}
//# sourceMappingURL=text.js.map