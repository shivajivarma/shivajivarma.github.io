import { Component, Element, h, Host, Prop, State } from '@stencil/core';
/**
 * @name Divider
 * @description A divider can be used to segment content vertically or horizontally.
 * @example <goat-divider style="width: 12rem;">or</goat-divider>
 */
export class Divider {
  constructor() {
    this.vertical = false;
    this.slotHasContent = false;
  }
  componentWillLoad() {
    this.slotHasContent = this.elm.hasChildNodes();
  }
  render() {
    return (h(Host, null,
      h("div", { class: {
          'divider': true,
          'vertical': this.vertical,
          'has-content': this.slotHasContent,
        } },
        h("div", { class: "line" }),
        h("div", { class: 'slot-container' },
          h("slot", null)),
        h("div", { class: "line" }))));
  }
  static get is() { return "goat-divider"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["divider.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["divider.css"]
  }; }
  static get properties() { return {
    "vertical": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "vertical",
      "reflect": true,
      "defaultValue": "false"
    }
  }; }
  static get states() { return {
    "slotHasContent": {}
  }; }
  static get elementRef() { return "elm"; }
}
//# sourceMappingURL=divider.js.map