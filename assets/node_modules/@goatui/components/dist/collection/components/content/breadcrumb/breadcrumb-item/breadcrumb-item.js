import { Component, h, Host, Prop } from '@stencil/core';
export class BreadcrumbItem {
  constructor() {
    this.active = false;
  }
  render() {
    return (h(Host, { itemprop: 'itemListElement', itemscope: true, itemtype: 'http://schema.org/ListItem' }, this.active ? h("goat-text", null,
      h("span", { itemProp: 'name' },
        h("slot", null)),
      h("meta", { itemProp: 'position', content: this.position })) : h("goat-link", { itemprop: 'item', href: this.href, target: this.target },
      h("span", { itemProp: 'name' },
        h("slot", null)),
      h("meta", { itemProp: 'position', content: this.position }))));
  }
  static get is() { return "goat-breadcrumb-item"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["breadcrumb-item.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["breadcrumb-item.css"]
  }; }
  static get properties() { return {
    "href": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Hyperlink to navigate to on click."
      },
      "attribute": "href",
      "reflect": false
    },
    "target": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": "Sets or retrieves the window or frame at which to target content."
      },
      "attribute": "target",
      "reflect": false
    },
    "position": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "position",
      "reflect": true
    },
    "active": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "active",
      "reflect": true,
      "defaultValue": "false"
    }
  }; }
}
//# sourceMappingURL=breadcrumb-item.js.map