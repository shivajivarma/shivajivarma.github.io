import { Component, Element, getAssetPath, h, Host, Listen, Prop, State } from '@stencil/core';
import loadDOMPurify from '../../../3d-party/dompurify';
/**
 * @name Empty State
 * @description A message that displays when there is no information to display.
 * @example <goat-empty-state class="content-center" headline="Empty list" description="Nothing to display">
 * </goat-empty-state>
 */
export class EmptyState {
  constructor() {
    this.illustration = 'no-document';
    this.actionVariant = 'default';
    this.actionDisabled = false;
    this.vertical = false;
  }
  resizeHandler() {
    this.vertical = this.elm.clientWidth < 768;
  }
  async componentWillLoad() {
    if (!window['DOMPurify']) {
      await loadDOMPurify();
    }
  }
  componentDidLoad() {
    this.resizeHandler();
  }
  render() {
    return (h(Host, null,
      h("div", { class: { 'empty-state': true, 'vertical': this.vertical } },
        h("div", { class: 'illustration' },
          h("goat-svg", { src: getAssetPath(`./assets/images/empty-state/${this.illustration}.svg`) })),
        h("div", { class: 'content' },
          this.headline && h("div", { class: 'title' }, this.headline),
          this.description && h("div", { class: 'description', innerHTML: window['DOMPurify'].sanitize(this.description) }),
          h("div", { class: 'actions' }, this.action &&
            h("goat-button", { href: this.actionUrl, icon: 'arrow-right', iconEnd: true, disabled: this.actionDisabled, variant: this.actionVariant }, this.action))))));
  }
  static get is() { return "goat-empty-state"; }
  static get encapsulation() { return "shadow"; }
  static get originalStyleUrls() { return {
    "$": ["empty-state.scss"]
  }; }
  static get styleUrls() { return {
    "$": ["empty-state.css"]
  }; }
  static get properties() { return {
    "illustration": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'no-document'",
        "resolved": "\"no-document\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "illustration",
      "reflect": true,
      "defaultValue": "'no-document'"
    },
    "headline": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "headline",
      "reflect": true
    },
    "description": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "description",
      "reflect": true
    },
    "action": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "action",
      "reflect": true
    },
    "actionUrl": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "string",
        "resolved": "string",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "action-url",
      "reflect": false
    },
    "actionVariant": {
      "type": "string",
      "mutable": false,
      "complexType": {
        "original": "'default' | 'light' | 'outline' | 'ghost' | 'link'",
        "resolved": "\"default\" | \"ghost\" | \"light\" | \"link\" | \"outline\"",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "action-variant",
      "reflect": false,
      "defaultValue": "'default'"
    },
    "actionDisabled": {
      "type": "boolean",
      "mutable": false,
      "complexType": {
        "original": "boolean",
        "resolved": "boolean",
        "references": {}
      },
      "required": false,
      "optional": false,
      "docs": {
        "tags": [],
        "text": ""
      },
      "attribute": "action-disabled",
      "reflect": false,
      "defaultValue": "false"
    }
  }; }
  static get states() { return {
    "vertical": {}
  }; }
  static get elementRef() { return "elm"; }
  static get listeners() { return [{
      "name": "resize",
      "method": "resizeHandler",
      "target": "window",
      "capture": false,
      "passive": true
    }]; }
}
//# sourceMappingURL=empty-state.js.map