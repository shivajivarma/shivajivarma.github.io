{"version":3,"file":"tabs.js","sourceRoot":"","sources":["../../../../src/components/navigation/tabs/tabs.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAsB,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAExF;;;;;;;;;GASG;AAMH,MAAM,OAAO,IAAI;EAMf,QAAQ,CAAC,GAAG;IACV,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;MACrB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KACnC;EACH,CAAC;EAED,SAAS,CAAC,MAAM;IACd,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACpC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,MAAM,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;KAC9C;IACD,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;IACtC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACzC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;KACrD;EACH,CAAC;EAED,OAAO;IACL,OAAO,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;EAC/C,CAAC;EAED,YAAY;IACV,OAAO,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;EACrD,CAAC;EAED,cAAc;IACZ,OAAO,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC;EACpD,CAAC;EAED,gBAAgB;IACd,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE;MAC1B,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;MAC5B,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;QAC1B,GAAG,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,GAAG,KAAK,CAAC,CAAC;MAC7C,CAAC,CAAC,CAAC;MACH,IAAI,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;QACzC,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,GAAG,KAAK,CAAC,CAAC;MAC5C,CAAC,CAAC,CAAC;MACH,IAAI,IAAI,CAAC,MAAM;QACb,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;KAC3B;SAAM;MACL,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;MACjE,IAAI,WAAW;QACb,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;KACzC;EACH,CAAC;EAED,MAAM;IACJ,OAAO,CAAC,EAAC,IAAI;MACX,eAAQ,CACH,CAAC,CAAC;EACX,CAAC;;;;;;;;;;;;;;;;;CAEF","sourcesContent":["import { Component, ComponentInterface, Element, h, Host, Listen } from '@stencil/core';\n\n/**\n * @name Tabs\n * @description An interactive button with a range of presentation options.\n * @example <goat-tabs>\n *   <goat-tabs-list>\n *    <goat-tab selected >Tab 1</goat-tab>\n *    <goat-tab>Tab 2</goat-tab>\n *   </goat-tabs-list>\n * </goat-tabs>\n */\n@Component({\n  tag: 'goat-tabs',\n  styleUrl: 'tabs.scss',\n  shadow: true,\n})\nexport class Tabs implements ComponentInterface {\n\n\n  @Element() elm!: HTMLElement;\n\n  @Listen('goat:tab-click')\n  tabClick(evt) {\n    if (evt.detail.target) {\n      this.selectTab(evt.detail.target);\n    }\n  }\n\n  selectTab(target) {\n    const tabs = this.getTabs();\n    for (let i = 0; i < tabs.length; i++) {\n      tabs[i].selected = target === tabs[i].target;\n    }\n    const tabPanels = this.getTabPanels();\n    for (let i = 0; i < tabPanels.length; i++) {\n      tabPanels[i].active = target === tabPanels[i].value;\n    }\n  }\n\n  getTabs() {\n    return this.elm.querySelectorAll('goat-tab');\n  }\n\n  getTabPanels() {\n    return this.elm.querySelectorAll('goat-tab-panel');\n  }\n\n  tabsHaveTarget() {\n    return this.elm.querySelector('goat-tab[target]');\n  }\n\n  componentDidLoad() {\n    if (!this.tabsHaveTarget()) {\n      const tabs = this.getTabs();\n      tabs.forEach((tab, index) => {\n        tab.setAttribute('target', 'tab-' + index);\n      });\n      this.getTabPanels().forEach((tab, index) => {\n        tab.setAttribute('value', 'tab-' + index);\n      });\n      if (tabs.length)\n        this.selectTab('tab-0');\n    } else {\n      const selectedTab = this.elm.querySelector('goat-tab[selected]');\n      if (selectedTab)\n        this.selectTab(selectedTab['target']);\n    }\n  }\n\n  render() {\n    return (<Host>\n      <slot />\n    </Host>);\n  }\n\n}\n"]}