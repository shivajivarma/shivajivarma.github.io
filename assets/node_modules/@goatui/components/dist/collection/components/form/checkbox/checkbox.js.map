{"version":3,"file":"checkbox.js","sourceRoot":"","sources":["../../../../src/components/form/checkbox/checkbox.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\nimport { getComponentIndex } from '../../../utils/utils';\n\n/**\n * @name Checkbox\n * @description Captures boolean input with an optional indeterminate mode.\n * @example <goat-checkbox value='true'>Want ice cream?</goat-checkbox>\n */\n@Component({\n  tag: 'goat-checkbox',\n  styleUrl: 'checkbox.scss',\n  shadow: true,\n})\nexport class Checkbox implements ComponentInterface, InputComponentInterface {\n\n  gid: string = getComponentIndex();\n\n  /**\n   * The input field name.\n   */\n  @Prop() name: string = `goat-input-${this.gid}`;\n\n  /**\n   * The checkbox label.\n   */\n  @Prop() label: string;\n\n  /**\n   * The input field value.\n   */\n  @Prop({ mutable: true }) value: boolean = false;\n\n  @Prop({ mutable: true }) intermediate: boolean = false;\n\n  @Prop() rounded: boolean = false;\n\n  /**\n   * The button size.\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\n   */\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\n\n  /**\n   * If true, required icon is show. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) required: boolean = false;\n\n\n  @Prop({ reflect: true }) readonly : boolean = false;\n\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  @Prop( {reflect: true, mutable: true}) configAria: any = {};\n\n  /**\n   * On change of input a CustomEvent 'goat:change' will be triggered. Event details contains parent event, oldValue, newValue of input.\n   */\n  @Event({ eventName: 'goat:change' }) goatChange: EventEmitter;\n\n  /**\n   * Emitted when the input loses focus.\n   */\n  @Event({ eventName: 'goat:blur' }) goatBlur: EventEmitter;\n\n  /**\n   * Emitted when the input has focus.\n   */\n  @Event({ eventName: 'goat:focus' }) goatFocus: EventEmitter;\n\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n\n  /**\n   * Sets focus on the native `input` in `goat-input`. Use this method instead of the global\n   * `input.focus()`.\n   */\n  @Method()\n  async setFocus() {\n    if (this.nativeInput) {\n      this.nativeInput.focus();\n    }\n  }\n\n  /**\n   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global\n   * `input.blur()`.\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeInput) {\n      this.nativeInput.blur();\n    }\n  }\n\n  @Listen('mouseup', { target: 'window' })\n  windowMouseUp() {\n    if (this.isActive)\n      this.isActive = false;\n  }\n\n  @Listen('keyup', { target: 'window' })\n  windowKeyUp(evt) {\n    if (this.isActive && (evt.key == ' '))\n      this.isActive = false;\n  }\n\n  private mouseDownHandler = () => {\n    this.isActive = true;\n  };\n\n  private keyDownHandler = (evt) => {\n    if (evt.key == ' ') {\n      evt.preventDefault();\n      this.isActive = true;\n      this.clickHandler(evt);\n    }\n  };\n\n  @Element() elm!: HTMLElement;\n  private nativeInput?: HTMLInputElement;\n  private iconContainer?: HTMLElement;\n  private tabindex?: string | number = 1;\n  @State() hasFocus = false;\n  @State() animate = true;\n  @State() isActive = false;\n  @State() slotHasContent = false;\n\n  private clickHandler = (ev: MouseEvent | KeyboardEvent) => {\n    if (!this.disabled && !this.readonly) {\n      this.value = !JSON.parse(this.nativeInput.value);\n      this.intermediate = false;\n      this.goatChange.emit(ev);\n      this.iconContainer.focus();\n    }\n  };\n\n  private blurHandler = (ev: FocusEvent) => {\n    this.hasFocus = false;\n    this.goatBlur.emit(ev);\n  };\n\n  private focusHandler = (ev: FocusEvent) => {\n    this.hasFocus = true;\n    this.goatFocus.emit(ev);\n  };\n\n  componentWillLoad() {\n    // If the ion-input has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // goat-input to avoid causing tabbing twice on the same element\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex !== null ? tabindex : undefined;\n      this.elm.removeAttribute('tabindex');\n    }\n    this.elm.getAttributeNames().forEach((name: string) => {\n      if (name.includes('aria-')) {\n        this.configAria[name] = this.elm.getAttribute(name);\n        this.elm.removeAttribute(name);\n      }\n    });\n    this.slotHasContent = this.elm.hasChildNodes();\n  }\n\n  render() {\n    return (\n      <Host has-focus={this.hasFocus} active={this.isActive}>\n        <label class={{\n          'checkbox': true,\n          'state-checked': this.value,\n          'state-intermediate': !this.value && this.intermediate,\n          [`size-${this.size}`]: true,\n          'has-focus': this.hasFocus,\n          'active': this.isActive,\n          'disabled': this.disabled,\n          'readonly': this.readonly,\n          'required': this.required,\n          'rounded': this.rounded,\n          'has-content': this.slotHasContent,\n        }}>\n          <div class='box'\n               tabindex={this.tabindex}\n               ref={elm => this.iconContainer = elm}\n               onKeyUp={(evt) => {\n                 if (evt.keyCode === 13) {\n                   this.clickHandler(evt);\n                 }\n               }}\n               onMouseDown={this.mouseDownHandler}\n               onKeyDown={this.keyDownHandler}\n               onBlur={this.blurHandler}\n               onFocus={this.focusHandler}\n\n               role=\"checkbox\"\n               aria-disabled={this.disabled + ''}\n               aria-required={this.required + ''}\n               aria-checked={this.value + ''}\n               {...this.configAria}>\n            <div class={{\n              'tick': true,\n              'animate': this.animate,\n            }} />\n          </div>\n\n          <input type='checkbox'\n                 class='input-native'\n                 name={this.name}\n                 value={this.value + ''}\n                 checked={this.value}\n                 aria-hidden='true'\n                 required={this.required}\n                 ref={elm => this.nativeInput = elm}\n                 tabindex='-1'\n                 onClick={this.clickHandler} />\n\n          <div class='slot-container'>\n            <slot />\n          </div>\n\n        </label>\n      </Host>\n    );\n  }\n\n\n}\n"]}