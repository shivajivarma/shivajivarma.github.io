{"version":3,"file":"code-editor.js","sourceRoot":"","sources":["../../../../src/components/form/code-editor/code-editor.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, ComponentInterface, Event, EventEmitter, h, Host, Method, Prop, State, Watch } from '@stencil/core';\nimport { debounceEvent, getComponentIndex } from '../../../utils/utils';\nimport loadMonaco from '../../../3d-party/monaco';\n\n/**\n * @name Code Editor\n * @description A browser based code editor.\n * @img /assets/img/code-editor.png\n */\n@Component({\n  tag: 'goat-code-editor',\n  styleUrl: 'code-editor.scss',\n  shadow: true,\n})\nexport class CodeEditor implements ComponentInterface, InputComponentInterface {\n\n  gid: string = getComponentIndex();\n\n\n  /**\n   * The input field name.\n   */\n  @Prop() name: string = `goat-input-${this.gid}`;\n\n  /**\n   * The input field value.\n   */\n  @Prop({ mutable: true }) value: string;\n\n  /**\n   * If true, required icon is show. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) required: boolean = false;\n\n\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop({reflect: true}) disabled: boolean = false;\n\n  @Prop({reflect: true}) readonly : boolean = false;\n\n  @Prop() theme: 'vs-light' | 'vs-dark' = 'vs-light';\n\n  @Prop() language: 'javascript' | 'json' | 'html' = 'javascript';\n\n  @Prop() lineNumbers: 'off' | 'on' = 'on';\n\n  /**\n   * Emitted when the value has changed..\n   */\n  @Event({ eventName: 'goat:change' }) p4Change: EventEmitter;\n\n  /**\n   * Set the amount of time, in milliseconds, to wait to trigger the `onChange` event after each keystroke.\n   */\n  @Prop() debounce = 250;\n\n  @State() hasFocus = false;\n\n\n  @Watch('debounce')\n  protected debounceChanged() {\n    this.p4Change = debounceEvent(this.p4Change, this.debounce);\n  }\n\n  @Watch('disabled')\n  disabledWatcher(newValue: string) {\n    this.editorMonacoInstance.updateOptions({ readOnly: newValue || this.readonly});\n  }\n\n  @Watch('readonly')\n  readonlyWatcher(newValue: string) {\n    this.editorMonacoInstance.updateOptions({ readOnly: newValue || this.disabled});\n  }\n\n  @Watch('language')\n  languageWatcher(newValue: string) {\n    window['monaco'].editor.setModelLanguage(this.editorMonacoInstance.getModel(), newValue);\n  }\n\n  @Watch('theme')\n  themeWatcher(newValue: string) {\n    window['monaco'].editor.setTheme(newValue);\n  }\n\n  @Watch('value')\n  valueWatcher(newValue: string) {\n    if (this.editorMonacoInstance.getValue() !== this.value) {\n      this.editorMonacoInstance.setValue(newValue);\n    }\n  }\n\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n\n  /**\n   * Sets focus on the native `input` in `goat-input`. Use this method instead of the global\n   * `input.focus()`.\n   */\n  @Method()\n  async setFocus() {\n    if (this.editorMonacoInstance) {\n      this.editorMonacoInstance.focus();\n    }\n  }\n\n  /**\n   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global\n   * `input.blur()`.\n   */\n  @Method()\n  async setBlur() {\n    if (this.editorMonacoInstance) {\n      this.editorMonacoInstance.blur();\n    }\n  }\n\n  private editorElement?: HTMLElement;\n  @State() editorMonacoInstance: any;\n\n  async componentWillLoad() {\n    this.debounceChanged();\n    if (!window['monaco']) {\n      await loadMonaco();\n    }\n  }\n\n  componentDidLoad() {\n    setTimeout(() => this.initializeMonaco(), 1000);\n  }\n\n  private initializeMonaco() {\n    const monaco = window['monaco'];\n\n    //monaco.languages.typescript.javascriptDefaults.addExtraLib(this.extraLibs);\n\n    this.editorElement.innerHTML = '';\n\n    this.editorMonacoInstance = monaco.editor.create(this.editorElement, {\n      value: this.value,\n      lineNumbers: this.lineNumbers,\n      language: this.language,\n      theme: this.theme,\n      readOnly: this.disabled || this.readonly,\n    });\n\n\n    this.editorMonacoInstance.onDidChangeModelContent(() => {\n      this.value = this.editorMonacoInstance.getValue();\n      this.p4Change.emit({ value: this.value });\n    });\n\n    this.editorMonacoInstance.onDidFocusEditorText(() => {\n      this.hasFocus = true;\n    });\n\n    this.editorMonacoInstance.onDidBlurEditorText(() => {\n      this.hasFocus = false;\n    });\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={{\n          'component': true,\n          'code-editor-component': true,\n          [this.theme]: true,\n          'disabled': this.disabled,\n          'readonly': this.readonly,\n          'has-focus': this.hasFocus,\n        }}>\n          <div class='editor' ref={el => this.editorElement = el} />\n          {!this.editorMonacoInstance && <div class='code-editor-loader'>\n            <goat-spinner class='rainbow' />\n            Loading editor...\n          </div>}\n        </div>\n\n\n      </Host>\n    );\n  }\n\n}\n"]}