import { ComponentInterface, EventEmitter } from '../../../stencil-public-runtime';
/**
 * @name Checkbox
 * @description Captures boolean input with an optional indeterminate mode.
 * @example <goat-checkbox value='true'>Want ice cream?</goat-checkbox>
 */
export declare class Checkbox implements ComponentInterface, InputComponentInterface {
  gid: string;
  /**
   * The input field name.
   */
  name: string;
  /**
   * The checkbox label.
   */
  label: string;
  /**
   * The input field value.
   */
  value: boolean;
  intermediate: boolean;
  rounded: boolean;
  /**
   * The button size.
   * Possible values are: `"sm"`, `"md"`, `"lg"`. Defaults to `"md"`.
   */
  size: 'sm' | 'md' | 'lg';
  /**
   * If true, required icon is show. Defaults to `false`.
   */
  required: boolean;
  readonly: boolean;
  /**
   * If true, the user cannot interact with the button. Defaults to `false`.
   */
  disabled: boolean;
  configAria: any;
  /**
   * On change of input a CustomEvent 'goat:change' will be triggered. Event details contains parent event, oldValue, newValue of input.
   */
  goatChange: EventEmitter;
  /**
   * Emitted when the input loses focus.
   */
  goatBlur: EventEmitter;
  /**
   * Emitted when the input has focus.
   */
  goatFocus: EventEmitter;
  getComponentId(): Promise<string>;
  /**
   * Sets focus on the native `input` in `goat-input`. Use this method instead of the global
   * `input.focus()`.
   */
  setFocus(): Promise<void>;
  /**
   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global
   * `input.blur()`.
   */
  setBlur(): Promise<void>;
  windowMouseUp(): void;
  windowKeyUp(evt: any): void;
  private mouseDownHandler;
  private keyDownHandler;
  elm: HTMLElement;
  private nativeInput?;
  private iconContainer?;
  private tabindex?;
  hasFocus: boolean;
  animate: boolean;
  isActive: boolean;
  slotHasContent: boolean;
  private clickHandler;
  private blurHandler;
  private focusHandler;
  componentWillLoad(): void;
  render(): any;
}
