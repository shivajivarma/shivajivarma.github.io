import { ComponentInterface, EventEmitter } from '../../../../stencil-public-runtime';
export declare class Tab implements ComponentInterface {
  gid: string;
  /**
   * Button size.
   * Possible values are `"sm"`, `"md"`, `"lg"`, `"xl"`, `"xxl"`. Defaults to `"md"`.
   */
  size: 'sm' | 'md' | 'lg' | 'xl' | 'xxl';
  /**
   * Button selection state.
   */
  selected: boolean;
  /**
   * If true, the user cannot interact with the button. Defaults to `false`.
   */
  disabled: boolean;
  disabledReason: string;
  /**
   * Icon which will displayed on button.
   * Possible values are bootstrap icon names.
   */
  icon: string;
  label: string;
  value: string;
  target: string;
  /**
   * Show loader.
   */
  showLoader: boolean;
  /**
   * On click of tab, a CustomEvent 'goat:tab-click' will be triggered.
   */
  goatTabClick: EventEmitter;
  hasFocus: boolean;
  isActive: boolean;
  slotHasContent: boolean;
  elm: HTMLElement;
  private tabindex?;
  private nativeInput?;
  windowMouseUp(): void;
  windowKeyUp(evt: any): void;
  setFocus(): Promise<void>;
  triggerClick(): Promise<void>;
  private getIconSize;
  private clickHandler;
  private blurHandler;
  private focusHandler;
  private mouseDownHandler;
  private keyDownHandler;
  componentWillLoad(): void;
  private renderDisabledReason;
  render(): any;
  private renderIcon;
}
