import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';

const tabPanelCss = "*{box-sizing:border-box}:host{font-family:var(--font-family-base)}::selection{color:var(--color-white, #ffffff);background:var(--color-primary, var(--color-blue-60, #0f62fe))}::-webkit-scrollbar{width:1rem;height:1rem}::-webkit-scrollbar-track{background:#f1f1f1}::-webkit-scrollbar-thumb{background:#888}::-webkit-scrollbar-thumb :hover{background:#555}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);border:0}.center-content{display:flex;align-items:center;justify-content:center}:host([hidden]){display:none}@keyframes reveal{0%{opacity:0;transform:translateY(8px)}}:host{display:none}:host([active]){display:block}";

const TabPanel = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {
  constructor() {
    super();
    this.__registerHost();
    this.__attachShadow();
    this.active = false;
  }
  render() {
    return (h(Host, null, h("slot", null)));
  }
  static get style() { return tabPanelCss; }
}, [1, "goat-tab-panel", {
    "value": [513],
    "active": [516]
  }]);
function defineCustomElement$1() {
  if (typeof customElements === "undefined") {
    return;
  }
  const components = ["goat-tab-panel"];
  components.forEach(tagName => { switch (tagName) {
    case "goat-tab-panel":
      if (!customElements.get(tagName)) {
        customElements.define(tagName, TabPanel);
      }
      break;
  } });
}

const GoatTabPanel = TabPanel;
const defineCustomElement = defineCustomElement$1;

export { GoatTabPanel, defineCustomElement };

//# sourceMappingURL=goat-tab-panel.js.map