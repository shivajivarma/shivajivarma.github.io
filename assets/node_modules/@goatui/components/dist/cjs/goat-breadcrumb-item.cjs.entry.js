'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

const index = require('./index-7441634b.js');

const breadcrumbItemCss = "*{box-sizing:border-box}:host{font-family:var(--font-family-base)}::selection{color:var(--color-white, #ffffff);background:var(--color-primary, var(--color-blue-60, #0f62fe))}::-webkit-scrollbar{width:1rem;height:1rem}::-webkit-scrollbar-track{background:#f1f1f1}::-webkit-scrollbar-thumb{background:#888}::-webkit-scrollbar-thumb :hover{background:#555}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0, 0, 0, 0);border:0}.center-content{display:flex;align-items:center;justify-content:center}:host([hidden]){display:none}@keyframes reveal{0%{opacity:0;transform:translateY(8px)}}";

const BreadcrumbItem = class {
  constructor(hostRef) {
    index.registerInstance(this, hostRef);
    this.active = false;
  }
  render() {
    return (index.h(index.Host, { itemprop: 'itemListElement', itemscope: true, itemtype: 'http://schema.org/ListItem' }, this.active ? index.h("goat-text", null, index.h("span", { itemProp: 'name' }, index.h("slot", null)), index.h("meta", { itemProp: 'position', content: this.position })) : index.h("goat-link", { itemprop: 'item', href: this.href, target: this.target }, index.h("span", { itemProp: 'name' }, index.h("slot", null)), index.h("meta", { itemProp: 'position', content: this.position }))));
  }
};
BreadcrumbItem.style = breadcrumbItemCss;

exports.goat_breadcrumb_item = BreadcrumbItem;

//# sourceMappingURL=goat-breadcrumb-item.cjs.entry.js.map