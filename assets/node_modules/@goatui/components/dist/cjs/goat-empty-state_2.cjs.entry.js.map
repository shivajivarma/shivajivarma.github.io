{"file":"goat-empty-state.goat-svg.entry.cjs.js","mappings":"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","names":["loadScript","h","Host","getAssetPath"],"sources":["./src/3d-party/dompurify/index.tsx","./src/components/content/empty-state/empty-state.scss?tag=goat-empty-state&encapsulation=shadow","./src/components/content/empty-state/empty-state.tsx","./src/components/content/svg/datasource.ts","./src/components/content/svg/svg.scss?tag=goat-svg&encapsulation=shadow","./src/components/content/svg/svg.tsx"],"sourcesContent":["import { loadScript } from '../../utils/utils';\n\nexport default async function loadDOMPurify() {\n  const version = '2.3.6';\n  // @ts-ignore\n  await loadScript(`https://cdnjs.cloudflare.com/ajax/libs/dompurify/${version}/purify.min.js`);\n}\n","@import \"../../../globalStyles/commons\";\n\n:host {\n  display: block;\n}\n\n.empty-state {\n  display: flex;\n  padding: v(--spacing-3);\n  justify-content: center;\n  gap: v(--spacing-8);\n  height: 100%;\n  align-items: center;\n  max-width: v(--container-lg);\n  margin: auto;\n}\n\n.illustration {\n  height: 100%;\n  display: flex;\n\n  svg {\n    height: 100%;\n  }\n\n  --empty-state-outline: #{v(--color-brand-primary)};\n  --empty-state-bg-primary: #{v(--color-brand-secondary)};\n  --empty-state-bg-secondary: #{v(--color-brand-secondary-40)};\n  --empty-state-bg-tertiary: #{v(--color-brand-secondary-30)};\n\n  --empty-state-text: #{v(--text-primary)};\n  --empty-state-bg-surface: #{v(--background)};\n\n  --empty-state-green: #{v(--color-success-50)};\n}\n\n:host-context([data-theme=\"dark\"]) {\n  .illustration {\n    --empty-state-bg-secondary: #{v(--color-brand-secondary-80)};\n    --empty-state-bg-tertiary: #{v(--color-brand-secondary-100)};\n  }\n}\n\n\n.content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  .title {\n    @include font-style(text-md);\n    font-weight: v(--font-weight-semi-bold);\n    margin-bottom: v(--spacing-2);\n    color: var(--text-color, v(--text-primary))\n  }\n\n  .description {\n    @include font-style(text-sm);\n    margin-bottom: v(--spacing-4);\n    color: var(--text-color, v(--text-secondary))\n  }\n}\n\n:host(.content-center) .content {\n  align-items: center;\n}\n\n.empty-state:not(.vertical) {\n\n  .illustration {\n    width: 50%;\n  }\n\n  .content {\n    width: 50%;\n  }\n}\n\n\n.empty-state.vertical {\n  flex-direction: column;\n  gap: v(--spacing-5);\n\n  .illustration {\n    height: auto;\n    width: 100%;\n    justify-content: center;\n  }\n}\n\n","import { Component, ComponentInterface, Element, getAssetPath, h, Host, Listen, Prop, State } from '@stencil/core';\nimport loadDOMPurify from '../../../3d-party/dompurify';\n\n\n/**\n * @name Empty State\n * @description A message that displays when there is no information to display.\n * @example <goat-empty-state class=\"content-center\" headline=\"Empty list\" description=\"Nothing to display\">\n * </goat-empty-state>\n */\n@Component({\n  tag: 'goat-empty-state',\n  styleUrl: 'empty-state.scss',\n  shadow: true,\n})\nexport class EmptyState implements ComponentInterface {\n\n  @Element() elm!: HTMLElement;\n\n  @Prop({ reflect: true }) illustration: 'no-document' = 'no-document';\n\n  @Prop({ reflect: true }) headline: string;\n\n  @Prop({ reflect: true }) description: string;\n\n  @Prop({ reflect: true }) action: string;\n\n  @Prop() actionUrl: string;\n\n  @Prop() actionVariant: 'default' | 'light' | 'outline' | 'ghost' | 'link' = 'default';\n\n  @Prop() actionDisabled: boolean = false;\n\n  @State() vertical: boolean = false;\n\n  @Listen('resize', { target: 'window' })\n  resizeHandler() {\n    this.vertical = this.elm.clientWidth < 768;\n  }\n\n  async componentWillLoad() {\n    if (!window['DOMPurify']) {\n      await loadDOMPurify();\n    }\n  }\n\n  componentDidLoad() {\n    this.resizeHandler();\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={{ 'empty-state': true, 'vertical': this.vertical }}>\n          <div class='illustration'>\n            <goat-svg src={getAssetPath(`./assets/images/empty-state/${this.illustration}.svg`)} />\n          </div>\n\n          <div class='content'>\n            {this.headline && <div class='title'>{this.headline}</div>}\n            {this.description && <div class='description' innerHTML={window['DOMPurify'].sanitize(this.description)}/>}\n            <div class='actions'>\n              {this.action &&\n                <goat-button\n                  href={this.actionUrl}\n                  icon={'arrow-right'}\n                  iconEnd={true}\n                  disabled={this.actionDisabled}\n                  variant={this.actionVariant}>\n                  {this.action}\n                </goat-button>}\n            </div>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n\n}\n","const cache: Record<string, string> = {};\n\n// TODO: prevent duplicated request when rendering multiple icons with same name simultaneously\nexport async function fetchIcon(url) {\n  if (!url) return '';\n  if (cache[url]) {\n    return cache[url];\n  }\n  const res = await fetch(url, {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'omit',\n  });\n  cache[url] = await res.text();\n  return cache[url];\n}\n","@import \"../../../globalStyles/commons\";\n\n:host {\n  display: inline-block;\n}\n\n.icon {\n  line-height: 0;\n  height: 100%;\n  width: 100%;\n}\n\nsvg {\n  height: 100%;\n  width: 100%;\n}\n\n:host(.inherit) .icon {\n  color: inherit;\n}\n","import { Component, h, Host, Prop, State, Watch } from '@stencil/core';\nimport { fetchIcon } from './datasource';\n\n@Component({\n  tag: 'goat-svg',\n  styleUrl: 'svg.scss',\n  shadow: true,\n})\nexport class Svg {\n\n  @Prop() src: string = '';\n\n  @State() svg: string = '';\n\n  async fetchSvg(name: string) {\n    if (this.src)\n      this.svg = await fetchIcon(name);\n  }\n\n\n  @Watch('src')\n  async handleNameChange(newValue: string) {\n    this.svg = await fetchIcon(newValue);\n  }\n\n  async componentWillLoad() {\n    await this.fetchSvg(this.src);\n  }\n\n\n  render() {\n    return (\n      <Host>\n        <div innerHTML={this.svg} class={{ 'icon': true }} />\n      </Host>\n    );\n  }\n\n}\n"],"version":3}