{"version":3,"sources":["src/components/content/avatar/avatar.scss?tag=goat-avatar&encapsulation=shadow","src/components/content/avatar/avatar.tsx"],"names":["avatarCss","Avatar","[object Object]","hostRef","this","size","name","src","split","firstName","charAt","toUpperCase","lastName","fontSize","match","replace","cssCls","push","h","Host","title","class","join","style","width","height","getFontSize","alt","getInitials"],"mappings":"yDAAA,MAAMA,EAAY,y7CCYLC,EAAM,MALnBC,YAAAC,aAYUC,KAAAC,KAAe,OAEfD,KAAAE,KAAe,GAEfF,KAAAG,IAAc,GAEdL,cACN,MAAMI,EAAOF,KAAKE,KAAKE,MAAM,KAC7B,IAAIC,EAAYH,EAAK,GAAKA,EAAK,GAAGI,OAAO,GAAGC,cAAgB,GAC5D,IAAIC,EAAWN,EAAK,GAAKA,EAAK,GAAGI,OAAO,GAAGC,cAAgB,GAC3D,MAAO,GAAGF,IAAYG,IAIhBV,cACN,MAAMG,EAAOD,KAAKC,KAClB,MAAMQ,EAAWT,KAAKC,KAAKS,MAAM,oBAAoB,GAErD,OAAQD,EAAW,EAAI,GAAMR,EAAKU,QAAQ,mBAAoB,IAIhEb,SACE,MAAMc,EAAS,CAAC,UAChB,GAAIZ,KAAKG,IAAK,CACZS,EAAOC,KAAK,oBACP,CACLD,EAAOC,KAAK,mBAEd,OACEC,EAACC,EAAI,CAACC,MAAOhB,KAAKE,MAChBY,EAAA,MAAA,CAAKG,MAAM,oBACTH,EAAA,MAAA,CAAKG,MAAOL,EAAOM,KAAK,KACnBC,MAAO,CAAEC,MAAOpB,KAAKC,KAAMoB,OAAQrB,KAAKC,KAAMQ,SAAUT,KAAKsB,gBAE9D,MACE,GAAItB,KAAKG,IAAK,CACZ,OAAOW,EAAA,MAAA,CAAKG,MAAM,QAAQd,IAAKH,KAAKG,IAAKoB,IAAKvB,KAAKE,WAC9C,CACL,OAAOY,EAAA,MAAA,CAAKG,MAAM,YACfjB,KAAKwB,iBALZ","sourcesContent":["@import \"../../../globalStyles/commons\";\n\n:host {\n  display: inline-block;\n  pointer-events: none;\n}\n\n.avatar-container {\n  display: flex;\n  align-items: center;\n  gap: v(--spacing-2);\n  line-height: 0;\n}\n\n.avatar {\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n  color: v(--color-white);\n\n  .image {\n    width: 100%;\n    height: 100%;\n  }\n\n  @include font-style(text-md);\n}\n\n:host(.square) {\n  .avatar {\n    border-radius: 10px;\n  }\n}\n\n.avatar.avatar-initials {\n  background: var(--avatar-bg-color, v(--color-brand-primary));\n}\n\n.avatar.avatar-image {\n  background: v(--color-brand-primary-30);\n}\n\n:host(.inverted) {\n  .avatar {\n    color: v(--color-brand-primary);\n  }\n\n  .avatar.avatar-initials {\n    background: var(--avatar-bg-color, v(--color-white));\n  }\n\n}\n","import { Component, Element, h, Host, Prop } from '@stencil/core';\n\n/**\n * @name Avatar\n * @description Avatars in their simplest form display content within a circular container.\n * @example <goat-avatar size=\"5rem\" name=\"Shivaji Varma\" src=\"/assets/img/avatar.png\"></goat-avatar>\n */\n@Component({\n  tag: 'goat-avatar',\n  styleUrl: 'avatar.scss',\n  shadow: true,\n})\nexport class Avatar {\n\n  @Element() elm!: HTMLElement;\n\n  /**\n   * Avatar size.\n   */\n  @Prop() size: string = '2rem';\n\n  @Prop() name: string = '';\n\n  @Prop() src: string = '';\n\n  private getInitials() {\n    const name = this.name.split(' ');\n    let firstName = name[0] ? name[0].charAt(0).toUpperCase() : '';\n    let lastName = name[1] ? name[1].charAt(0).toUpperCase() : '';\n    return `${firstName}${lastName}`;\n  }\n\n\n  private getFontSize() {\n    const size = this.size;\n    const fontSize = this.size.match(/^\\d+(\\.\\d{1,2})?/)[0];\n    // @ts-ignore\n    return (fontSize * 4 / 10) + size.replace(/^\\d+(\\.\\d{1,2})?/, '');\n  }\n\n\n  render() {\n    const cssCls = ['avatar'];\n    if (this.src) {\n      cssCls.push('avatar-image');\n    } else {\n      cssCls.push('avatar-initials');\n    }\n    return (\n      <Host title={this.name}>\n        <div class='avatar-container'>\n          <div class={cssCls.join(' ')}\n               style={{ width: this.size, height: this.size, fontSize: this.getFontSize() }}>\n            {\n              (() => {\n                if (this.src) {\n                  return <img class='image' src={this.src} alt={this.name} />;\n                } else {\n                  return <div class='initials'>\n                    {this.getInitials()}\n                  </div>;\n                }\n              })()\n            }\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n}\n"]}