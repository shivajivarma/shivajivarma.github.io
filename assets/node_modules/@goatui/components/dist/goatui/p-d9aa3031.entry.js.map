{"version":3,"sources":["src/components/form/checkbox/checkbox.scss?tag=goat-checkbox&encapsulation=shadow","src/components/form/checkbox/checkbox.tsx","src/components/form/form-control/form-control.scss?tag=goat-form-control&encapsulation=shadow","src/components/form/form-control/form-control.tsx","src/components/form/select/select.scss?tag=goat-select&encapsulation=shadow","src/components/form/select/select.tsx"],"names":["checkboxCss","Checkbox","[object Object]","hostRef","this","gid","getComponentIndex","name","value","intermediate","rounded","size","required","readonly","disabled","configAria","mouseDownHandler","isActive","keyDownHandler","evt","key","preventDefault","clickHandler","tabindex","hasFocus","animate","slotHasContent","ev","JSON","parse","nativeInput","goatChange","emit","iconContainer","focus","blurHandler","goatBlur","focusHandler","goatFocus","blur","elm","hasAttribute","getAttribute","undefined","removeAttribute","getAttributeNames","forEach","includes","hasChildNodes","h","Host","has-focus","active","class","checkbox","state-checked","state-intermediate","has-content","Object","assign","ref","onKeyUp","keyCode","onMouseDown","onKeyDown","onBlur","onFocus","role","aria-disabled","aria-required","aria-checked","tick","type","checked","aria-hidden","onClick","formControlCss","FormControl","inline","setAttribute","compName","controlElm","querySelector","passRequiredToField","passLabelToField","label","oldProps","aria-label","newVal","_oldVal","propName","error","success","warning","caption","getInputState","form-control","renderLabel","renderSubtitle","selectCss","Select","multiple","search","state","showLoader","isOpen","items","positions","clearable","debounce","searchString","startSlotHasContent","endSlotHasContent","selectHandler","selectItemValue","addItem","closeList","clearInput","removeItem","setTimeout","setFocus","openList","dropdownContent","dropdownContentElm","dropdownContentHeight","getBoundingClientRect","height","dropdownContentWidth","width","fixPosition","toggleList","console","log","menuElm","onInput","input","target","goatSearch","displayElement","debounceEvent","path","composedPath","detail","toString","split","getValues","push","join","newItem","getItemByValue","filter","item","removedItem","length","find","placeholder","position","isMobile","i","dropdownButtonRect","dropdownContentRect","top","bottom","left","right","isOut","isOutOfViewport","any","debounceChanged","values","map","has-value","hasValue","is-open","dropdown","select","input-container","start-slot-has-content","end-slot-has-content","renderMultiSelectValues","getDisplayValue","getModeIcon","renderDropdownList","el","shade","filteredItems","filterItems","empty","toLocaleLowerCase"],"mappings":"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","sourcesContent":["@import \"../../../globalStyles/commons\";\n@import \"checkbox-animation\";\n\n:host {\n  display: inline-block;\n  color: v(--text-primary);\n}\n\n.checkbox {\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  &.has-content {\n    gap: v(--spacing-2);\n  }\n\n\n  .input-native {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    margin: -1px;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    border: 0;\n  }\n\n  .box {\n    position: relative;\n    background: v(--field-01);\n    border: 1px solid v(--ui-04);\n    border-radius: v(--border-radius);\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &:before {\n      pointer-events: none;\n      content: \"\";\n      display: block;\n      width: 100%;\n      height: 100%;\n      box-sizing: border-box;\n      border-radius: v(--border-radius);\n      border: 1px solid transparent;\n    }\n  }\n\n  &.rounded {\n    .box {\n      border-radius: 50%;\n\n      &:before {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .tick {\n    position: absolute;\n    width: 0;\n    height: 0;\n  }\n\n  &.has-focus:not(.active) {\n    .box {\n      @include focus-ring;\n      border-color: transparent;\n    }\n\n    &:not(.state-checked) .box:before {\n      border-color: v(--icon-01);\n    }\n  }\n\n}\n\n:host(.light) .box {\n  background-color: v(--field-02);\n}\n\n\n.checkbox.state-checked {\n  .box {\n    background: v(--color-primary);\n    border-color: transparent;\n  }\n\n  .tick {\n    width: 33%;\n    height: 67%;\n    border-right: 3px solid transparent;\n    border-bottom: 3px solid transparent;\n    transform: rotate(45deg);\n    transform-origin: 0 100%;\n\n    &.animate {\n      animation: checkbox-check 125ms 250ms cubic-bezier(.4, .0, .23, 1) forwards;\n    }\n\n    &:not(.animate) {\n      border-color: v(--color-white);\n      top: -15%;\n      left: 15%;\n    }\n  }\n\n  &:hover .box {\n    background: v(--color-primary-70);\n  }\n\n  &.active .box {\n    border-color: v(--color-white);\n  }\n\n  &.has-focus:not(.active) {\n    .box {\n      @include focus-ring;\n      border-color: v(--color-white);\n    }\n  }\n\n}\n\n.checkbox.state-intermediate {\n  .box {\n    background: v(--color-primary);\n    border-color: transparent;\n  }\n\n\n  .tick {\n    width: 67%;\n    height: 0;\n    margin: auto;\n    border-right: 3px solid transparent;\n    border-bottom: 3px solid transparent;\n    transform-origin: 0 100%;\n\n    &.animate {\n      animation: checkbox-slash 125ms 250ms cubic-bezier(.4, .0, .23, 1) forwards;\n    }\n\n    &:not(.animate) {\n      border-color: v(--color-white);\n    }\n  }\n\n  &:hover .box {\n    background: v(--color-primary-90);\n  }\n\n  &.active .box {\n    border-color: v(--color-white);\n  }\n\n  &.has-focus:not(.active) {\n    .box {\n      @include focus-ring;\n      border-color: v(--color-white);\n    }\n  }\n\n}\n\n\n/**\n * SIZES\n */\n.checkbox.size-sm {\n\n  @include font-style(text-sm);\n\n  .box {\n    width: 1.25rem;\n    height: 1.25rem;\n  }\n\n}\n\n.checkbox.size-md {\n  @include font-style(text-md);\n\n  .box {\n    width: 1.5rem;\n    height: 1.5rem;\n  }\n}\n\n.checkbox.size-lg {\n  @include font-style(text-lg);\n\n  .box {\n    width: 1.75rem;\n    height: 1.75rem;\n  }\n}\n\n\n/**\n * States\n */\n@each $state in [success, warning, error] {\n  :host-context(.input-state-#{$state}) {\n    .checkbox .box {\n      border-color: v(--color-#{$state});\n    }\n  }\n}\n\n.checkbox.readonly {\n  cursor: default;\n  color: v(--text-disabled) !important;\n  border-color: v(--text-disabled) !important;\n\n  &.state-checked .box {\n    background: v(--text-disabled) !important;\n  }\n\n  .box {\n    border: 1px solid v(--text-disabled) !important;\n  }\n\n  .tick {\n    border-color: #{v(--disabled-01)} !important;\n  }\n\n}\n\n\n.checkbox.disabled {\n  cursor: not-allowed;\n  color: v(--text-disabled) !important;\n  border-color: v(--text-disabled) !important;\n\n  &.state-checked .box {\n    background: v(--text-disabled) !important;\n  }\n\n  .box {\n    border: 1px solid v(--text-disabled) !important;\n  }\n\n  .tick {\n    border-color: #{v(--disabled-01)} !important;\n  }\n\n}\n\n\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\nimport { getComponentIndex } from '../../../utils/utils';\n\n/**\n * @name Checkbox\n * @description Captures boolean input with an optional indeterminate mode.\n * @example <goat-checkbox value='true'>Want ice cream?</goat-checkbox>\n */\n@Component({\n  tag: 'goat-checkbox',\n  styleUrl: 'checkbox.scss',\n  shadow: true,\n})\nexport class Checkbox implements ComponentInterface, InputComponentInterface {\n\n  gid: string = getComponentIndex();\n\n  /**\n   * The input field name.\n   */\n  @Prop() name: string = `goat-input-${this.gid}`;\n\n  /**\n   * The checkbox label.\n   */\n  @Prop() label: string;\n\n  /**\n   * The input field value.\n   */\n  @Prop({ mutable: true }) value: boolean = false;\n\n  @Prop({ mutable: true }) intermediate: boolean = false;\n\n  @Prop() rounded: boolean = false;\n\n  /**\n   * The button size.\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\n   */\n  @Prop() size: 'sm' | 'md' | 'lg' = 'md';\n\n  /**\n   * If true, required icon is show. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) required: boolean = false;\n\n\n  @Prop({ reflect: true }) readonly : boolean = false;\n\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  @Prop( {reflect: true, mutable: true}) configAria: any = {};\n\n  /**\n   * On change of input a CustomEvent 'goat:change' will be triggered. Event details contains parent event, oldValue, newValue of input.\n   */\n  @Event({ eventName: 'goat:change' }) goatChange: EventEmitter;\n\n  /**\n   * Emitted when the input loses focus.\n   */\n  @Event({ eventName: 'goat:blur' }) goatBlur: EventEmitter;\n\n  /**\n   * Emitted when the input has focus.\n   */\n  @Event({ eventName: 'goat:focus' }) goatFocus: EventEmitter;\n\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n\n  /**\n   * Sets focus on the native `input` in `goat-input`. Use this method instead of the global\n   * `input.focus()`.\n   */\n  @Method()\n  async setFocus() {\n    if (this.nativeInput) {\n      this.nativeInput.focus();\n    }\n  }\n\n  /**\n   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global\n   * `input.blur()`.\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeInput) {\n      this.nativeInput.blur();\n    }\n  }\n\n  @Listen('mouseup', { target: 'window' })\n  windowMouseUp() {\n    if (this.isActive)\n      this.isActive = false;\n  }\n\n  @Listen('keyup', { target: 'window' })\n  windowKeyUp(evt) {\n    if (this.isActive && (evt.key == ' '))\n      this.isActive = false;\n  }\n\n  private mouseDownHandler = () => {\n    this.isActive = true;\n  };\n\n  private keyDownHandler = (evt) => {\n    if (evt.key == ' ') {\n      evt.preventDefault();\n      this.isActive = true;\n      this.clickHandler(evt);\n    }\n  };\n\n  @Element() elm!: HTMLElement;\n  private nativeInput?: HTMLInputElement;\n  private iconContainer?: HTMLElement;\n  private tabindex?: string | number = 1;\n  @State() hasFocus = false;\n  @State() animate = true;\n  @State() isActive = false;\n  @State() slotHasContent = false;\n\n  private clickHandler = (ev: MouseEvent | KeyboardEvent) => {\n    if (!this.disabled && !this.readonly) {\n      this.value = !JSON.parse(this.nativeInput.value);\n      this.intermediate = false;\n      this.goatChange.emit(ev);\n      this.iconContainer.focus();\n    }\n  };\n\n  private blurHandler = (ev: FocusEvent) => {\n    this.hasFocus = false;\n    this.goatBlur.emit(ev);\n  };\n\n  private focusHandler = (ev: FocusEvent) => {\n    this.hasFocus = true;\n    this.goatFocus.emit(ev);\n  };\n\n  componentWillLoad() {\n    // If the ion-input has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // goat-input to avoid causing tabbing twice on the same element\n    if (this.elm.hasAttribute('tabindex')) {\n      const tabindex = this.elm.getAttribute('tabindex');\n      this.tabindex = tabindex !== null ? tabindex : undefined;\n      this.elm.removeAttribute('tabindex');\n    }\n    this.elm.getAttributeNames().forEach((name: string) => {\n      if (name.includes('aria-')) {\n        this.configAria[name] = this.elm.getAttribute(name);\n        this.elm.removeAttribute(name);\n      }\n    });\n    this.slotHasContent = this.elm.hasChildNodes();\n  }\n\n  render() {\n    return (\n      <Host has-focus={this.hasFocus} active={this.isActive}>\n        <label class={{\n          'checkbox': true,\n          'state-checked': this.value,\n          'state-intermediate': !this.value && this.intermediate,\n          [`size-${this.size}`]: true,\n          'has-focus': this.hasFocus,\n          'active': this.isActive,\n          'disabled': this.disabled,\n          'readonly': this.readonly,\n          'required': this.required,\n          'rounded': this.rounded,\n          'has-content': this.slotHasContent,\n        }}>\n          <div class='box'\n               tabindex={this.tabindex}\n               ref={elm => this.iconContainer = elm}\n               onKeyUp={(evt) => {\n                 if (evt.keyCode === 13) {\n                   this.clickHandler(evt);\n                 }\n               }}\n               onMouseDown={this.mouseDownHandler}\n               onKeyDown={this.keyDownHandler}\n               onBlur={this.blurHandler}\n               onFocus={this.focusHandler}\n\n               role=\"checkbox\"\n               aria-disabled={this.disabled + ''}\n               aria-required={this.required + ''}\n               aria-checked={this.value + ''}\n               {...this.configAria}>\n            <div class={{\n              'tick': true,\n              'animate': this.animate,\n            }} />\n          </div>\n\n          <input type='checkbox'\n                 class='input-native'\n                 name={this.name}\n                 value={this.value + ''}\n                 checked={this.value}\n                 aria-hidden='true'\n                 required={this.required}\n                 ref={elm => this.nativeInput = elm}\n                 tabindex='-1'\n                 onClick={this.clickHandler} />\n\n          <div class='slot-container'>\n            <slot />\n          </div>\n\n        </label>\n      </Host>\n    );\n  }\n\n\n}\n","@import \"../../../globalStyles/commons\";\n\n:host {\n  display: block;\n  margin-bottom: v(--spacing-4);\n}\n\n.form-control {\n  display: flex;\n  flex-direction: column;\n\n  slot::slotted(goat-input),\n  slot::slotted(goat-textarea),\n  slot::slotted(goat-checkbox),\n  slot::slotted(goat-radio),\n  slot::slotted(goat-code-editor){\n    margin-bottom: 0.375rem;\n  }\n}\n\n.label {\n  @include font-style(text-sm);\n  font-weight: v(--font-weight-medium);\n  margin-bottom: 0.375rem;\n\n  color: v(--text-secondary);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n  .required {\n    color: v(--danger-02);\n    padding-right: v(--spacing-1);\n  }\n}\n\n.subtitle {\n  @include font-style(text-xs);\n  font-weight: v(--font-weight-regular);\n  .subtitle-caption {\n    color: v(--text-05);\n  }\n  .subtitle-error {\n    color: v(--support-error-inverse);\n  }\n  .subtitle-success {\n    color: v(--support-success-inverse);\n  }\n  .subtitle-warning {\n    color: v(--support-warning-inverse);\n  }\n}\n\n\n.form-control.inline {\n  flex-direction: row;\n  align-items: center;\n  .label {\n    margin-bottom: 0;\n    margin-inline-end: v(--spacing-2);\n  }\n}\n","import { Component, ComponentInterface, Element, h, Host, Prop } from '@stencil/core';\n\n/**\n * @name Form Control\n * @description The Form Control component adds a label and caption for its child control.\n * @example <goat-form-control label='Full Name' required>\n *   <goat-input type='text'></goat-input>\n * </goat-form-control>\n */\n@Component({\n  tag: 'goat-form-control',\n  styleUrl: 'form-control.scss',\n  shadow: true,\n})\nexport class FormControl implements ComponentInterface {\n\n  /**\n   * The label for the form control.\n   */\n  @Prop() label: string;\n\n  /**\n   * The caption for the form control.\n   */\n  @Prop() caption: string;\n\n\n  @Prop() error: string;\n\n  @Prop() warning: string;\n\n  @Prop() success: string;\n\n  @Prop() inline: boolean = false;\n\n  /**\n   * Whether the form control is required.\n   */\n  @Prop() required: boolean = false;\n\n  @Element() elm!: HTMLElement;\n\n  private controlElm!: HTMLElement;\n\n  componentDidLoad() {\n    this.elm.setAttribute('role', 'group');\n    for (const compName of ['goat-input', 'goat-textarea', 'goat-select', 'goat-checkbox', 'goat-radio', 'goat-code-editor']) {\n      this.controlElm = this.elm.querySelector(`${compName}`);\n      this.passRequiredToField(this.required);\n      this.passLabelToField(this.label);\n    }\n  }\n\n  passRequiredToField(required: boolean) {\n    if (this.controlElm) {\n      // @ts-ignore\n      this.controlElm.required = required;\n    }\n  }\n\n  passLabelToField(label: string) {\n    if (this.controlElm) {\n      // @ts-ignore\n      const oldProps = this.controlElm.configAria;\n      // @ts-ignore\n      this.controlElm.configAria = {\n        'aria-label': label,\n        ...oldProps,\n      };\n    }\n  }\n\n  componentShouldUpdate(newVal: any, _oldVal, propName: string): boolean | void {\n    if (propName === 'required') {\n      this.passRequiredToField(newVal);\n    } else if (propName === 'label') {\n      this.passLabelToField(newVal);\n    }\n  }\n\n  renderLabel() {\n    if (this.label)\n      return <label class='label'>\n        {this.required && <span class='required'>*</span>}\n        {this.label}\n      </label>;\n  }\n\n\n  renderSubtitle() {\n    if (this.error)\n      return <div class='subtitle-error'>\n        {this.error}\n      </div>;\n    else if (this.success)\n      return <div class='subtitle-success'>\n        {this.success}\n      </div>;\n    else if (this.warning)\n      return <div class='subtitle-warning'>\n        {this.warning}\n      </div>;\n    else if (this.caption)\n      return <div class='subtitle-caption'>\n        {this.caption}\n      </div>;\n  }\n\n  getInputState() {\n    if (this.error)\n      return 'input-state-error';\n    else if (this.success)\n      return 'input-state-success';\n    else if (this.warning)\n      return 'input-state-warning';\n    return 'input-state-default';\n  }\n\n  render() {\n    return (\n      <Host class={{\n        [this.getInputState()]: true,\n      }}>\n        <div class={{ 'form-control': true, 'inline': this.inline }}>\n          {this.renderLabel()}\n          <div class='field'>\n            <slot />\n          </div>\n          <div class='subtitle'>\n            {this.renderSubtitle()}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n}\n","@import \"../common-input\";\n\n\n\n.dropdown {\n  position: relative;\n\n  .dropdown-content {\n    z-index: v(--z-index-dropdown-content);\n    position: absolute;\n    width: max-content;\n    line-height: 0;\n    transform: scale(0);\n    transition: transform 0.1s ease-out 0s;\n  }\n\n  .chevron-down {\n    transition: transform 0.1s ease-out 0s;\n  }\n\n  &.is-open {\n    .dropdown-content {\n      transform: scale(1);\n    }\n    .chevron-down {\n      transform: rotate(180deg);\n    }\n  }\n\n  &.bottom-right .dropdown-content {\n    top: calc(100% + #{v(--spacing-2)});\n    left: 0;\n    transform-origin: top;\n  }\n\n  &.bottom-left .dropdown-content {\n    top: calc(100% + #{v(--spacing-2)});\n    right: 0;\n    transform-origin: top;\n  }\n\n  &.top-right .dropdown-content {\n    bottom: calc(100% + #{v(--spacing-2)});\n    left: 0;\n    transform-origin: bottom;\n  }\n\n  &.top-left .dropdown-content {\n    bottom: calc(100% + #{v(--spacing-2)});\n    right: 0;\n    transform-origin: bottom;\n  }\n\n  &.center .dropdown-content {\n    top: 0;\n    left: 0;\n    position: fixed;\n    transform-origin: center;\n    display: flex;\n    align-items: center;\n    width: 100vw;\n    height: 100vh;\n    justify-content: center;\n    background: rgba(0, 0, 0, 0.5);\n    pointer-events: none;\n  }\n\n}\n\n.select {\n\n  .dropdown-content {\n    width: 100%;\n    min-width: 10rem;\n  }\n\n  .menu {\n    width: 100%;\n  }\n\n  .display-value {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    cursor: pointer;\n  }\n\n  .multi-select-value {\n    padding-inline-end: v(--spacing-2);\n    &:last-child {\n      padding-inline-end: 0;\n    }\n  }\n\n  .input-container:not(.has-value) {\n    .display-value {\n      color: v(--text-placeholder);\n    }\n  }\n\n  .start-search {\n    height: 10rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    gap: v(--spacing-3);\n  }\n\n}\n","import {\n  Component,\n  ComponentInterface,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { debounceEvent, getComponentIndex, isMobile, isOutOfViewport } from '../../../utils/utils';\nimport { Components } from '../../../components';\nimport GoatMenu = Components.GoatMenu;\n\n\n/**\n * @name Select\n * @description Allows the user to select one or more options using a dropdown.\n * @img /assets/img/select.png\n */\n@Component({\n  tag: 'goat-select',\n  styleUrl: 'select.scss',\n  shadow: true,\n})\nexport class Select implements ComponentInterface, InputComponentInterface {\n\n  gid: string = getComponentIndex();\n\n\n  /**\n   * The input field name.\n   */\n  @Prop() name: string = `goat-input-${this.gid}`;\n\n  /**\n   * The input field placeholder.\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * The input field value.\n   */\n  @Prop({ mutable: true }) value?: string | number = '';\n\n  @Prop() multiple: boolean = false;\n\n  /**\n   * The select input size.\n   * Possible values are: `\"sm\"`, `\"md\"`, `\"lg\"`. Defaults to `\"md\"`.\n   */\n  @Prop({ reflect: true }) size: 'sm' | 'md' | 'lg' = 'md';\n\n  /**\n   * Search type\n   * Possible values are `\"none\"`, `\"initial\"`, `\"contains\"`, `\"managed\"`. Defaults to `\"none\"`.\n   */\n  @Prop() search: 'none' | 'initial' | 'contains' | 'managed' = 'none';\n\n  /**\n   * The input state.\n   * Possible values are: `\"success\"`, `\"error\"`, `\"warning\"`, 'default'. Defaults to `\"default\"`.\n   */\n  @Prop({ reflect: true }) state: 'success' | 'error' | 'warning' | 'default' = 'default';\n\n  /**\n   * If true, required icon is show. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) required: boolean = false;\n\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) disabled: boolean = false;\n\n  /**\n   * If true, the user cannot interact with the button. Defaults to `false`.\n   */\n  @Prop({ reflect: true }) readonly: boolean = false;\n\n\n  @Prop() showLoader: boolean = false;\n\n  @Prop({ mutable: true }) isOpen: boolean = false;\n\n  @Prop({ reflect: true, mutable: true }) configAria: any = {};\n\n  /**\n   *  [{\n   *    label: 'Shivaji Varma',\n   *    value: 'shivaji-varma'\n   *  }]\n   */\n  @Prop() items: any = [];\n\n  @Prop() positions: string = 'bottom-right,top-right,bottom-left,top-left';\n\n\n  /**\n   * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n   */\n  @Prop() clearable = false;\n\n  /**\n   * Set the amount of time, in milliseconds, to wait to trigger the `goatChange` event after each keystroke.\n   */\n  @Prop() debounce = 300;\n\n\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event({ eventName: 'goat:change' }) goatChange: EventEmitter;\n\n  /**\n   * Emitted when the action button is clicked..\n   */\n  @Event({ eventName: 'goat:action-click' }) p4ActionClick: EventEmitter;\n\n  /**\n   * Emitted when a keyboard input occurred.\n   */\n  @Event({ eventName: 'goat:search' }) goatSearch: EventEmitter;\n\n  /**\n   * Sets focus on the native `input` in `ion-input`. Use this method instead of the global\n   * `input.focus()`.\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    this.displayElement.focus();\n  }\n\n  /**\n   * Sets blur on the native `input` in `goat-input`. Use this method instead of the global\n   * `input.blur()`.\n   */\n  @Method()\n  async setBlur() {\n    if (this.nativeInput) {\n      this.nativeInput.blur();\n    }\n  }\n\n  @Watch('debounce')\n  protected debounceChanged() {\n    this.goatSearch = debounceEvent(this.goatSearch, this.debounce);\n  }\n\n  @Listen('click', { target: 'window' })\n  windowClick(evt) {\n    const path = (evt.path || evt.composedPath());\n    for (const elm of path) {\n      if (elm == this.elm)\n        return;\n    }\n    this.isOpen = false;\n  }\n\n  @Listen('goat:menu-item-click')\n  menuItemClick(evt) {\n    this.selectHandler(evt.detail.value);\n  }\n\n  @Method()\n  async getComponentId() {\n    return this.gid;\n  }\n\n  @Element() elm!: HTMLElement;\n  private nativeInput?: HTMLInputElement;\n  private dropdownContentElm?: HTMLElement;\n  private menuElm?: GoatMenu;\n  private dropdownContentHeight: any;\n  private dropdownContentWidth: any;\n  @State() hasFocus = false;\n  @State() searchString: string = '';\n  @State() startSlotHasContent = false;\n  @State() endSlotHasContent = false;\n  @State() position: string;\n  private displayElement?: HTMLElement;\n\n  @Listen('goat:tag-dismiss')\n  tagDismissClick(evt) {\n    this.removeItem(evt.detail.value);\n  }\n\n  private getValues() {\n    if (this.value)\n      return this.value.toString().split(',');\n    else\n      return [];\n  }\n\n  private addItem(selectItemValue) {\n    let value = this.getValues();\n    if (!value.includes(selectItemValue)) {\n      if (!this.multiple)\n        value = [];\n      value.push(selectItemValue);\n      this.value = value.join(',');\n      this.goatChange.emit({ value: this.value, newItem: this.getItemByValue(selectItemValue) });\n    }\n  }\n\n  private removeItem(selectItemValue) {\n    let value = this.getValues();\n    if (value.includes(selectItemValue)) {\n      value = value.filter(item => item !== selectItemValue);\n      this.value = value.join(',');\n      this.goatChange.emit({ value: this.value, removedItem: this.getItemByValue(selectItemValue) });\n    }\n  }\n\n  private selectHandler = (selectItemValue) => {\n    if (!this.disabled && !this.readonly) {\n      this.addItem(selectItemValue);\n    }\n    this.closeList();\n  };\n\n  private clearInput = () => {\n    if (!this.disabled && !this.readonly) {\n      this.removeItem(this.value);\n    }\n  };\n\n\n  private blurHandler = () => {\n    this.hasFocus = false;\n  };\n\n  private focusHandler = () => {\n    this.hasFocus = true;\n  };\n\n  private closeList = () => {\n    if (!this.disabled && !this.readonly && this.isOpen) {\n      this.isOpen = false;\n      setTimeout(() => this.setFocus(), 100);\n    }\n  };\n\n  private openList = () => {\n    if (!this.disabled && !this.readonly && !this.isOpen) {\n      this.isOpen = true;\n      if (this.search !== 'none') {\n        this.searchString = '';\n        setTimeout(() => {\n          const dropdownContent = this.dropdownContentElm;\n          this.dropdownContentHeight = dropdownContent.getBoundingClientRect().height;\n          this.dropdownContentWidth = dropdownContent.getBoundingClientRect().width;\n          this.fixPosition();\n          this.nativeInput.focus();\n        }, 100);\n      } else {\n        setTimeout(() => {\n          const dropdownContent = this.dropdownContentElm;\n          this.dropdownContentHeight = dropdownContent.getBoundingClientRect().height;\n          this.dropdownContentWidth = dropdownContent.getBoundingClientRect().width;\n          this.fixPosition();\n        }, 100);\n      }\n    }\n  };\n\n  private toggleList = () => {\n    if (this.isOpen)\n      this.closeList();\n    else\n      this.openList();\n  };\n\n\n  private keyDownHandler = (evt) => {\n    if (evt.key === 'Enter') {\n      evt.preventDefault();\n      this.toggleList();\n    } else if (evt.key === 'ArrowDown') {\n      if (this.isOpen) {\n        console.log('inside select');\n        evt.preventDefault();\n        this.menuElm.setFocus();\n      }\n    } else if (evt.key === 'ArrowUp') {\n      if (this.isOpen) {\n        evt.preventDefault();\n        this.menuElm.setFocus(); // focus on previous item\n      }\n    }\n  };\n\n  private onInput = (ev: Event) => {\n    const input = ev.target as HTMLInputElement;\n    this.searchString = input.value || '';\n    this.goatSearch.emit({ value: this.searchString });\n  };\n\n  private hasValue(): boolean {\n    return (this.value || '').toString().length > 0;\n  }\n\n  private getItemByValue(value) {\n    if (this.items) {\n      return this.items.find((item) => {\n        return item.value == value;\n      });\n    }\n  }\n\n  private getDisplayValue() {\n    if (!this.multiple) {\n      if (this.items) {\n        const item = this.getItemByValue(this.value);\n        if (item) {\n          return item.label;\n        }\n      }\n      if (!this.disabled && !this.readonly) {\n        return this.placeholder;\n      } else {\n        return <span>&nbsp;</span>;\n      }\n    } else {\n      if (!this.value && !this.disabled && !this.readonly) {\n        return this.placeholder;\n      } else {\n        return <span>&nbsp;</span>;\n      }\n    }\n  }\n\n\n  componentWillLoad() {\n    if (this.positions)\n      this.position = this.positions.split(',')[0];\n    this.elm.getAttributeNames().forEach((name: string) => {\n      if (name.includes('aria-')) {\n        this.configAria[name] = this.elm.getAttribute(name);\n        this.elm.removeAttribute(name);\n      }\n    });\n    this.startSlotHasContent = !!this.elm.querySelector('[slot=\"start\"]');\n    this.endSlotHasContent = !!this.elm.querySelector('[slot=\"end\"]');\n  }\n\n\n  @Listen('scroll', { target: 'window' })\n  fixPosition() {\n    if (this.isOpen && this.dropdownContentHeight && this.dropdownContentWidth) {\n\n      if (isMobile()) {\n        this.position = 'center';\n        return;\n      }\n\n      const positions = this.positions.split(',');\n      for (let i = 0; i < positions.length; i++) {\n        const dropdownButtonRect: any = this.elm.getBoundingClientRect();\n        const dropdownContentRect: any = {};\n        if (positions[i] === 'bottom-right') {\n          dropdownContentRect.top = dropdownButtonRect.top + dropdownButtonRect.height;\n          dropdownContentRect.bottom = dropdownContentRect.top + this.dropdownContentHeight;\n          dropdownContentRect.left = dropdownButtonRect.left;\n          dropdownContentRect.right = dropdownButtonRect.left + this.dropdownContentWidth;\n        } else if (positions[i] === 'top-right') {\n          dropdownContentRect.top = dropdownButtonRect.top - this.dropdownContentHeight;\n          dropdownContentRect.bottom = dropdownButtonRect.top;\n          dropdownContentRect.left = dropdownButtonRect.left;\n          dropdownContentRect.right = dropdownButtonRect.left + this.dropdownContentWidth;\n        } else if (positions[i] === 'bottom-left') {\n          dropdownContentRect.top = dropdownButtonRect.top + dropdownButtonRect.height;\n          dropdownContentRect.bottom = dropdownContentRect.top + this.dropdownContentHeight;\n          dropdownContentRect.left = dropdownButtonRect.left - this.dropdownContentWidth;\n          dropdownContentRect.right = dropdownButtonRect.left;\n        } else if (positions[i] === 'top-left') {\n          dropdownContentRect.top = dropdownButtonRect.top - this.dropdownContentHeight;\n          dropdownContentRect.bottom = dropdownButtonRect.top;\n          dropdownContentRect.left = dropdownButtonRect.left - this.dropdownContentWidth;\n          dropdownContentRect.right = dropdownButtonRect.left;\n        }\n        const isOut = isOutOfViewport(dropdownContentRect);\n        if (!isOut.any) {\n          this.position = positions[i];\n          break;\n        }\n      }\n    }\n  };\n\n\n  connectedCallback() {\n    this.debounceChanged();\n  }\n\n  renderMultiSelectValues() {\n    const values = this.getValues();\n    if (this.multiple && values.length) {\n      return values.map((value) => {\n        const item = this.getItemByValue(value);\n        if (item) {\n          return (\n            <goat-tag filter class='multi-select-value' value={item.value}>{item.label}</goat-tag>\n          );\n        }\n      });\n    }\n  }\n\n  render() {\n\n    return (<Host\n      has-value={this.hasValue()}\n      has-focus={this.hasFocus}\n      is-open={this.isOpen}\n      position={this.position}>\n\n      <div class={{ 'dropdown': true, 'select': true, [this.position]: true, 'is-open': this.isOpen }}>\n        <div class={{\n          'input-container': true,\n          [`search-${this.search}`]: true,\n          'has-focus': this.hasFocus,\n          'disabled': this.disabled,\n          'readonly': this.readonly,\n          'has-value': this.hasValue(),\n          'start-slot-has-content': this.startSlotHasContent,\n          'end-slot-has-content': this.endSlotHasContent,\n        }}>\n\n          <div class='slot-container start'>\n            <slot name='start' />\n          </div>\n\n          <div class='multi-select-values'>\n            {this.renderMultiSelectValues()}\n          </div>\n\n          {\n            (() => {\n              if (this.search !== 'none' && this.isOpen) {\n                return <input class='input input-native'\n                              ref={input => this.nativeInput = input}\n                              type='text'\n                              name={this.name}\n                              value={this.searchString}\n                              placeholder={this.placeholder}\n                              onBlur={this.blurHandler}\n                              onFocus={this.focusHandler}\n                              onInput={this.onInput}\n                              onKeyDown={this.keyDownHandler}\n                              {...this.configAria}\n                />;\n              } else {\n                return <div class='input display-value'\n                            tabindex='0'\n                            ref={input => this.displayElement = input}\n                            aria-disabled={this.disabled ? 'true' : null}\n                            onFocus={this.focusHandler}\n                            onBlur={this.blurHandler}\n                            onKeyDown={this.keyDownHandler}\n                            onClick={(evt) => {\n                              evt.preventDefault();\n                              this.toggleList();\n                            }}\n                            {...this.configAria} >\n                  {this.getDisplayValue()}\n                </div>;\n              }\n            })()\n          }\n\n\n          {this.clearable && !this.multiple && this.hasValue() &&\n            <goat-icon class='clear input-action' name='x-circle-fill' size={this.size} onClick={this.clearInput}\n                       role='button' />}\n\n          <div class='slot-container end'>\n            <slot name='end' />\n          </div>\n\n          {this.getModeIcon()}\n\n        </div>\n        <div class='dropdown-content' ref={(elm) => this.dropdownContentElm = elm}>\n          {this.isOpen && this.renderDropdownList()}\n        </div>\n      </div>\n    </Host>);\n  }\n\n\n  private getModeIcon() {\n    if (this.showLoader) {\n      return <goat-spinner class='input-action rainbow' />;\n    }\n    if (!this.disabled && !this.readonly)\n      return <goat-icon name='chevron-down' size={this.size}\n                        class='input-action chevron-down' role='button' onClick={this.toggleList} />;\n  }\n\n  private renderDropdownList() {\n    if (this.search === 'managed' && !this.items.length) {\n      return <goat-menu\n        class='menu'\n        ref={(el) => this.menuElm = el}>\n\n        <div class='start-search'>\n          <goat-icon name='search' size={this.size} />\n          <goat-text shade='secondary'>Start typing to perform search</goat-text>\n        </div>\n\n      </goat-menu>;\n    }\n\n\n    if (this.items) {\n      const filteredItems = this.filterItems();\n      return <goat-menu\n        class='menu'\n        empty={filteredItems.length == 0}\n        ref={(el) => this.menuElm = el}>\n\n        {(() => {\n          return filteredItems.map((item) => {\n            return <goat-menu-item value={item.value}>\n              {item.label || item.value}\n            </goat-menu-item>;\n          });\n        })()}\n\n      </goat-menu>;\n    }\n  }\n\n  private filterItems() {\n    if (this.search === 'managed')\n      return this.items;\n    return this.items.filter((item) => {\n      return (!this.searchString || item.label.toLocaleLowerCase().includes(this.searchString.toLocaleLowerCase()));\n    });\n  }\n\n}\n"]}